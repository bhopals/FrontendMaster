
## Chapter 1 - Into Programming

- STATEMENT 
  - In a computer programming, a group of words, numbers, and operators that
    performs a specific task is a STATEMENT. 
  - Example: `a = b * 2`
    - `a`, `b` are Variables
    - `*,`=` are Operators
    - `2` is a Literal value

- EXPRESSION
 - STATEMENTS are made of one or more expressions. An expression is any reference to a variable or a value,
   OR a set if variable(s), and value(s) combined with Operators.
 - Example: `a = b * 2`
   - This statement has FOUR expressions:
     - `2` is a LITERAL VALUE EXPRESSION
     - `b` is a VARIABLE EXPRESSION, which means to retrieve its current value
     - `b * 2` is an ARITHMETIC EXPRESSION, which means to od a multiplication
     - `a = b * 2` is an ASSIGNMENT EXPRESSION, which means to assign the result of the `b * 2` 
        expression to the variable `a`

 - A General expression that stands alone is also called an EXPRESSION STATEMENT
   - Example: `b * 2` 
     - This would not have any effect as it would not do anything.

 - A More common expression statement is a CALL EXPRESSION STATEMENT - Function Call
   - Example: `alert(a)`        

- Implicit Coersion (Double equal does the implicit Coersion for you)
- Explicit Coersion


- VARIABLES
  - A Symbolic Container that stores the value of a variable.
  - You declare a variable to hold a specific type of value, we use
    `TYPE ENFORCEMENT` or `STATIC TYPING` of strict assignment of typed variable
  - OR define `DYNAMIC TYPING` or `WEAK TYPING`

- SCOPE
  - Technically called LEXICAL SCOPE
  - In Javascript each function get its own scope.
  - Scope is basically a collection of variables as well as rules for how those variables
    are accessed by name.
  - Only code inside that function can access that function's SCOPED Variables.
  - Lexical Scope means Definition SCOPE (Where the item got created)
  - REMEMBER - It will be Definition Space (where it is defined) not 
    Invocation Space (Where the var is invoked)
  - Lexical ==> Lexicon ==> "Lexis" ==> "Word"
  - Lexican Means Dictionary
  - Lexical Scope - Region in which a WORD exists is determined by where it was DEFINED and CREATED.
    - A scope is an environment/region in which something (a variable) exists
    - A scope can access its parents.
    - A parent scope does not have direct access to variables declared in an inner scope.
    - Lexical has do do with where a variable was declared/created.
    - Lexical scope enforces finding variables from the scope/block they were created/declared and not the environment which they are running in.
    - Dynamic Scope is the opposite of Lexical Scope.
    - Dynamic scoping checks the variables from where they are running.



KEYWORDS
 - STATEMENT ==> Multiple Expressions
 - EXPRESSION
 - LITERAL VALUE EXPRESSION
 - VARIABLE EXPRESSION
 - ASSIGNMENT EXPRESSION
 - CORESION - IMPLCIT and EXPLICIT
 - DYNAMIC TYPING or WEAK TYPING
 - TYPE ENFORCEMENT or STATIC TYPING
 - SCOPE (LEXICAL SCOPE/STATIC SCOPE)


## Chapter 2 - Into Javascript


## Chapter 3 - Into YDKJS

